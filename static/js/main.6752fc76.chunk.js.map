{"version":3,"sources":["img/logo.png","img/promo-bg.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","Navbar","collapseOnSelect","expand","style","Brand","href","src","require","alt","className","id","Math","floor","random","htmlFor","type","value","name","readOnly","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wKAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,yIC0G5BC,E,kDA7Fd,aAAc,IAAD,8BACZ,gBACWC,MAAM,GAFL,E,qDAaZ,OACC,6BACK,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,MAAO,IAC1C,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SAAQ,yBAAKC,IAAKC,EAAQ,IAAmBC,IAAI,WAAWC,UAAU,WAkB3F,yBAAKC,GAAG,UACR,yBAAKA,GAAG,WACR,yBAAKA,GAAG,WACR,yBAAKA,GAAG,UACR,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oCACb,wBAAIA,UAAU,aAAd,kBAEF,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,OAAON,MAAO,CAAC,MAAS,SAArC,yIAIF,6BACE,0BAAMM,UAAU,QACd,yBAAKA,UAAU,YAAYN,MAAO,CAAC,MAAS,SAC1C,6BACE,uCACA,8BAAOQ,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,IAE5C,6BACE,gDACA,iDAEF,6BACE,8CACA,kCAAQF,KAAKC,MAAsB,IAAhBD,KAAKE,UAAqB,IAE/C,6BACE,sDACA,mCAASF,KAAKC,MAAsB,IAAhBD,KAAKE,UAAwB,KAGrD,yBAAKJ,UAAU,iBAAiBN,MAAO,CAAC,MAAS,SAC/C,8BACE,2BAAOW,QAAQ,cAAf,kBAEF,8BACE,2BAAOC,KAAK,OAAOC,MAAM,oBAAoBN,GAAG,aAAaO,KAAK,aAAaR,UAAU,+BAA+BS,UAAQ,SAM1I,yBAAKT,UAAU,qBACb,yBAAKA,UAAU,wBACb,yBAAKH,IAAKC,EAAQ,IAAuBC,IAAI,eAAeC,UAAU,gC,GApFpEU,IAAMC,WCAJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6752fc76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.deff4c7e.png\";","module.exports = __webpack_public_path__ + \"static/media/promo-bg.a9e515ec.png\";","/**\n * File Name : App.js\n *  Author : Rishabh Dwivedi\n * Version : 1.0\n * Last update : 1 Oct 2020\n */\n\nimport React from 'react';\nimport './App.css';\nimport { Navbar, Nav} from 'react-bootstrap';\n// import { Navbar, NavItem, NavDropdown, MenuItem, Nav, Form, FormControl, Button } from 'react-bootstrap';\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper();\n        this.state={\n            \n        }\n    }\n    /* LifeCycle */\n\n    // componentDidMount() {\n        \n    // }\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n        <Navbar collapseOnSelect expand=\"lg\" style={{}}>\n          <Navbar.Brand href=\"#home\"><img src={require('./img/logo.png')} alt=\"logo.png\" className=\"logo\"/></Navbar.Brand>\n          {/* <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\" className=\"text-color\">HOME</Nav.Link>\n              <Nav.Link href=\"#about\" className=\"text-color\">ABOUT US</Nav.Link>\n              <Nav.Link href=\"#howitworks\" className=\"text-color\">HOW IT WORKS</Nav.Link>\n              <Nav.Link href=\"#advantages\" className=\"text-color\">ADVANTAGES</Nav.Link>\n              <Nav.Link href=\"#features\" className=\"text-color\">FEATURES</Nav.Link>\n            </Nav>\n            <Nav>\n              <Nav.Link href=\"#deets\">More deets</Nav.Link>\n              <Nav.Link eventKey={2} href=\"#memes\">\n                Dank memes\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse> */}\n        </Navbar>\n        <div id='stars'></div>\n        <div id='stars2'></div>\n        <div id='stars3'></div>\n        <div id='title'></div>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n\n            <div className=\"col-sm-6 col-lg-6\">\n              <div className=\"h4_div_crowd ml-4 pl-4 mt-4 pt-4\">\n                <h4 className=\"ml-4 mt-4\">CROWD SHARING</h4>\n              </div>\n              <div className=\"ml-4 pl-4 mt-4 pt-4\">\n                <p className=\"ml-4\" style={{\"color\": '#fff'}}>\n                  The Crowd Sharing project is a decentralized platform based on the Industry's most innovative and widely used blockchain technology.\n                </p>\n              </div>\n              <div>\n                <form className=\"ml-4\">\n                  <div className=\"ml-4 pl-4\" style={{\"color\": '#fff'}}>\n                    <div>\n                      <span>ID : </span>\n                      <span>{Math.floor(Math.random() * 1000) + 1}</span>\n                    </div>\n                    <div>\n                      <span>ETH ADDRESS : </span>\n                      <span>..............</span>\n                    </div>\n                    <div>\n                      <span>REFRAL ID : </span>\n                      <span>R{Math.floor(Math.random() * 100000) + 1}</span>\n                    </div>\n                    <div>\n                      <span>DIRETC SPONSER ID : </span>\n                      <span>DS{Math.floor(Math.random() * 100000000) + 1}</span>\n                    </div>\n                  </div>\n                  <div className=\"ml-4 pl-4 mt-3\" style={{\"color\": '#fff'}}>\n                    <span>\n                      <label htmlFor=\"clone_addr\">Clone Address</label>\n                    </span>\n                    <span>\n                      <input type=\"text\" value=\"Naygon Technology\" id=\"clone_addr\" name=\"clone_addr\" className=\"mt-2 form-control clone_addr\" readOnly/>\n                    </span>\n                  </div> \n                </form>\n              </div>\n            </div>\n            <div className=\"col-sm-6 col-lg-6\">\n              <div className=\"promo_main ml-4 pl-4\">\n                <img src={require('./img/promo-bg.png')} alt=\"promo-bg.png\" className=\"promo_bg img-fluid\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}